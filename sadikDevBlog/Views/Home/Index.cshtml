@{
    ViewData["Title"] = "Home Page";
}
<div id="app">
    <div class="row">
        <h1 class="border-bottom pb-1">Blog Posts</h1>
        <div class="row" v-if="isLoaded">
            <div v-for="post in posts"
                class="col-lg-4 col-md-6 col-sm-12  blog-post-list-container pt-3 rounded blog-post-list-container pt-3 rounded">
                <a :href="'home/detail?postId='+post.id">
                    <div class="row">
                        <div class="col">
                            <img :src="post.imagePath" class="img-fluid rounded float-start border" alt="vue">
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            <h3 class="pt-3">{{post.header}}</h3>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            <h6 class="fw-light">{{post.shortContent}}</h6>
                        </div>
                    </div>
                </a>
            </div>
        </div>
        <div v-else>
            <div class="row py-5">
                <div class="col text-center">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            </div>

        </div>
    </div>
    <div class="row">
        <div class="col text-center">
            <button @@click="getMoreBlogPost" type="button" class="btn btn-outline-secondary">Load More...</button>
        </div>
    </div>
</div>
@section Vue{}
@section Scripts{
<script>
    const { createApp } = Vue

    createApp({
        data() {
            return {
                isLoaded: false,
                posts: [],
                lastIndexOfLoadedPosts: 0
            }
        },
        methods: {
            getListBlogPost(startFrom, take = 6) {
                axios.get("/home/getlistblogpost", { params: { startFrom, take } }).then(response => {
                    this.$data.posts.push(...response.data)
                    this.$data.lastIndexOfLoadedPosts += response.data.length

                    this.$data.isLoaded = true
                })
            },
            getMoreBlogPost() {
                this.getListBlogPost(this.$data.lastIndexOfLoadedPosts)
            }
        },
        mounted() {
            // methods can be called in lifecycle hooks, or other methods!
            this.getListBlogPost(0)
        }
    }).mount('#app')
</script>
}
